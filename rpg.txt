1.主人公のパーティにいるキャラクターの全データをパーティーテーブルから抽出せよ。
SELECT * FROM 'パーティー';

2.パーティーテーブルから、名称、HP､MPの一覧を取得する。各見出しは次のように表示すること。
・なまえ　・現在のHP　・現在のMP
SELECT 名称 AS なまえ,hp AS 現在のHP,mp AS 現在のMP FROM パーティー

3.現在設定されているイベントの全データをイベントテーブルから抽出する。ただし「*｣を用いること
SELECT * FROM イベント

4.イベントテーブルから、イベント番号とイベント名称の一覧を取得する。各見出しは次のように表示すること
・番号　・場面
SELECT イベント番号 AS 番号,イベント名称 AS 場面 FROM イベント

5.パーティーテーブルに、次の３つのデータを追加する。
ID：A01、A02、A03
名称：スガワラ､オーエ,イズミ
職業コード：21、10､20
HP:131、156、84
MP:232、84、190
INSERT INTO パーティー(id,名称,職業コード,hp,mp)
VALUES
('A01','スガワラ',21,131,232),
('A02','オーエ',10,156,84),
('A03','イズミ',20,84,190);

LEVEL2
6.パーティーテーブルから、IDが「C02]のデータを抽出する。
SELECT * FROM `パーティー` WHERE id = 'C02'

7.パーティーテーブルのID「A01｣のデータについて、HPを120に更新する。
UPDATE パーティー SET hp = 120 WHERE id = 'A01

8.ﾊﾟｰﾃｨｰテーブルから、HPが100未満のデータについて、ID,名称、HPの一覧を抽出する。
SELECT id,名称,HP FROM パーティー WHERE hp < 100

9．パーティーテーブルから、MPが100以上のデータについてID、名称、MPの一覧を抽出する。
SELECT id,名称,mp FROM パーティー WHERE mp >= 100

10. イベントテーブルから、タイプが「特殊」でないデータについて、イベント番号、イベント名称、タイプの一覧を抽出する。
[Tips]
WHERE タイプ<>‘3’
でOK
SELECT イベント番号,イベント名称,タイプ FROM `イベント` WHERE タイプ<>3
11．イベントテーブルから、イベント番号が5以下のデータについて、イベント番号とイベント名称を抽出する。
SELECT イベント番号,イベント名称 FROM `イベント` WHERE イベント番号 <= 5

12．イベントテーブルから、イベント番号が20を超過しているデータについて、イベント番号とイベント名称を抽出する。
SELECT イベント番号,イベント名称 FROM `イベント` WHERE イベント番号 > 20

13．イベントテーブルから、別のイベントのクリアを前提としないイベントについて、イベント番号とイベント名称を抽出する。
SELECT イベント番号,イベント名称 FROM `イベント` WHERE 前提イベント番号 IS NULL

14．イベントテーブルから、次に発生するイベントが決められているイベントについて、イベント番号、イベント名称、後続イベント番号を抽出する。
SELECT イベント番号,イベント名称,後続イベント番号 FROM イベント WHERE 後続イベント番号 IS NOT NULL 

15．名称に「ミ」が含まれるパーティーグループのデータについて、状態コードを「眠り」に更新する。
UPDATE パーティー
SET 状態コード = 01
WHERE 名称 LIKE '%ミ%'

16．HPが120~160の範囲にあるパーティーテーブルのデータについて、ID,名称、HPの一覧を抽出する。ただし、記述条件は１つであること。
[Tips]
BETWEENを使う
SELECT id,名称,hp FROM パーティー WHERE hp BETWEEN 120 AND 160

17．職業が「勇者」、「戦士」、「武道家」のいずれかであるパーティーテーブルのデータについて、名称と職業コードを抽出する。ただし、記述する条件式は１つであること
[Tips]
IN()を使う
SELECT 名称,職業コード FROM パーティー WHERE 職業コード IN ('01', '10', '11')

18．状態コードが「異常なし」と「気絶」のどちらでもないパーティーグループのデータについて名称と状態コードを抽出する。ただし、記述する条件式は１つであること。
SELECT 名称,状態コード FROM パーティー WHERE 状態コード NOT IN('00','09')

19．パーティーテーブルから、HPとMPがともに100を超えているデータを抽出する。
SELECT * FROM `パーティー` WHERE HP>100 AND MP >100

20．パーティーテーブルから、IDが「A」で始まり、職業コードの１文字目が「２」であるデータを抽出する。
SELECT * FROM `パーティー` 
WHERE id LIKE 'A%' AND 職業コード LIKE '2%'

21．イベントテーブルから、タイプが「強制」で、事前にクリアが必要なイベントで、かつ次に発生するイベントが設定されているデータを抽出する。
[Tips]
この条件に一致するデータ現段階ではないかも・・・
SELECT * FROM イベント WHERE タイプ = '01' AND 後続イベント番号 <> NULL

22．パーティーテーブルとイベントテーブルそれぞれについて、主キーの役割を果たしている列名を日本語で解答する。
id、イベント番号

LEVEL3
23. パーティーテーブルから、パーティーの現在の状態コード一覧を取得する。重複は除外すること。
SELECT DISTINCT 状態コード FROM `パーティー` 

24. パーティーテーブルから、IDと名称をIDの昇順に抽出する。
SELECT id,名称
FROM パーティー
ORDER BY id ASC

25. パーティーテーブルから、名称と職業コードを名称の逆順に抽出する。
SELECT 名称,職業コード
FROM パーティー
ORDER BY 職業コード DESC

26. パーティーテーブルから、名称,HP,状態コードを、状態コードの昇順かつHPの高い順に抽出する。
SELECT 名称,hp,状態コード
FROM パーティー
ORDER BY 状態コード ASC ,hp DESC



27．イベントテーブルから、タイプ、イベント番号、イベント名称、前提イベント番号、後続イベント番号をタイプの昇順かつイベント番号の昇順に抽出する。並び替えには列番号を用いること。
[Tips]
ORDER BYの列指定には列番号を用いることができる。
列番号とは選択列リストにおける列の番号のことで、SELECT命令に記述した順に1から数える。
SELECT タイプ,イベント番号,イベント名称,前提イベント番号,後続イベント番号
FROM `イベント`
ORDER BY 1 ,2

28. パーティーテーブルから、HPの高い順に3件抽出する。
SELECT * FROM `パーティー`
ORDER BY hp DESC LIMIT 3

29. パーティーテーブルから、MPが3番目に高いデータを抽出する。
SELECT * FROM `パーティー`
ORDER BY mp DESC LIMIT 1 OFFSET 2

30. パーティーテーブルから、次の形式の一覧を取得する。
・職業区分 ・職業コード　・ID　・名称
職業区分は、物理攻撃の得意なもの(職業コードが1から始まる)を[S],魔法攻撃の得意なもの(職業コードが2から始まる)を[M],それ以外を[A]と表示すること。また一覧は職業コード順とすること。
SELECT 
CASE 
WHEN 職業コード LIKE '1%' THEN 'S'
WHEN 職業コード LIKE '2%' THEN 'M'
ELSE 'S' 
END AS 職業区分
,職業コード,id,名称
FROM パーティー
ORDER BY 職業コード

31. イベントテーブルと経験イベントテーブルから、まだ参加していないイベント番号を抽出する。イベント番号順に表示すること。
[tips]
まだ参加していない->経験イベントテーブルあるデータを除外
副問い合わせを用いWHERE句を以下のように記述するとよい
WHERE イベント番号 NOT IN(SELECT イベント番号 FROM 経験イベント)
SELECT イベント番号 
FROM イベント
WHERE イベント番号 NOT IN(SELECT イベント番号 FROM 経験イベント)
ORDER BY イベント番号 

32. イベントテーブルと経験イベントテーブルから、すでにクリアされたイベントのうちタイプがフリーのイベント番号を抽出する。
[tips]
すでにクリアされた->経験イベントテーブルある
副問い合わせを用いWHERE句を以下のように記述するとよい
1
WHERE イベント番号 IN(SELECT イベント番号 FROM 経験イベント WHERE クリア区分='1')
2
AND タイプ = '2'
SELECT イベント番号 
FROM イベント
WHERE イベント番号 IN(SELECT イベント番号 FROM 経験イベント WHERE クリア区分='1')
AND タイプ = '2'



level4
33. アイテム「勇気の鈴」を装備すると、HPが50ポイントアップする。このアイテムを装備したときの各キャラクターのHPを適切な列を用いて次の別名で取得する。ただし、このアイテムは「武道家」と「学者」しか装備できない。
・なまえ ・現在のHP　・装備後のHP
SELECT 名称 AS なまえ,hp AS 現在のHP,
CASE 職業コード
WHEN 21 THEN hp+50
WHEN 11 THEN hp+50
ELSE hp+0
END 
AS 装備後のHP
FROM `パーティー`

34. ID[A01]と[A03]のキャラクターがアイテム「知恵の指輪」を装備し、MPが20ポイントアップした。その該当データのMPを更新する。
UPDATE パーティー
SET mp = mp+20
WHERE id IN('A01','A03') 

35. 武道家の技「スッキリパンチ」は、自分のHPを2倍したポイントのダメージを敵に与える。この技を使った時のダメージを適切な列を用いて次の別名で抽出する。
・なまえ ・現在のHP　・予想されるダメージ
SELECT 名称 AS なまえ,hp AS 現在のHP,
CASE 職業コード
WHEN 11 THEN HP * 2
END
AS 予想されるダメージ
FROM `パーティー`
WHERE 職業コード = 11

36. 現在、主人公のパーティーにいるキャラクターの状況について、適切な列を用いて
次の別名で一覧を作成する。
・なまえ ・HPとMP　・ステータス
HPとMPはMPを[/]でつなげたもの、ステータスには状態コードを日本語で置き換えたものを表示すること。ただし、ステータスに異常がない場合には何も表示しない。

[Tips]
ムズイ。コードテーブルをコード種別で絞りんこんでLEFT JOINする。
SELECT
〜ここを記述する〜
FROM パーティー AS p
LEFT JOIN (SELECT * FROM コード WHERE コード種別=2) AS c
ON p.状態コード = c.コード値

37．イベントテーブルから、次の形式でイベント一覧を取得する。
・イベント番号　・イベント名称 ・タイプ ・発生時期
タイプはコードを日本語で置き換えたもの、発生時期は次の条件に応じたものを表示すること。
・イベント番号が1から10なら「序盤」
・イベント番号が11から17なら「中盤」
・上記意外なら「終盤」

[Tips]
結合は使わない。CASEで場合分け。

38. 敵の攻撃「ネームバリュー」は、名前の文字数を10倍したポイントのダメージがある。
この攻撃を受けた時の各キャラクターの予想ダメージを適切な列を用いて次の別名で取得する。
・なまえ ・現在のHP ・予想ダメージ

39. 敵の「四苦八苦」を受け、HPまたはMPが4で割り切れるキャラクターは混乱した。
該当データの状態コードを更新する。なお、剰余の計算には%演算子を用いる

40. 町の道具屋で売値が777のアイテム「女神の祝福」を買ったところ、会員証を持っているため30%割引で購入できた。この際に支払った金額を求める。端数は切り捨て。


41. 戦闘中にアイテム「女神の祝福」を使ったところ、全員のHPとMPがそれまでの値に対して3割りほど回復した。該当するデータを更新する。ただし、端数は四捨五入すること。
[Tips]
四捨五入は以下の関数を用いる

1
ROUND(数値を表す列,有効とする桁数)
2
有効桁が正の場合は少数部の桁数、負の場合は整数部の桁数
[例]

1
ROUND(3.141592,2) -->3.14
2
ROUND(380,-2) -->400
42. 戦士の技「Step by Step」は、攻撃の回数だけ自分のHPをべき乗したポイントのダメージを与える。3回攻撃したときの、各回の攻撃ポイントを適切な列を用いて次の別名で取得する。ただし、1回目は0乗から始まる。

・なまえ ・HP ・攻撃1回目 ・攻撃2回目 ・攻撃3回目
[Tips]
べき乗は以下の関数を用いる

1
POWER(数値を表す列,何乗するかの数値)
[例]

1
POWER(4,2) -->16
2
POWER(4,3) -->64
[Tips]
Step by Stepぶっ壊れ性能ですね！。戦士限定なのをお忘れなく。

43. 現在、主人公のパーティーにいるキャラクターの状況について、HPと状態コードから、リスクを重み付けした一覧を適切な列を用いて次の別名で取得する。
・なまえ　・HP ・状態コード ・リスク値
リスク値には、次の条件に従った値を算出する。
・HPが50以下ならリスク値3
・HPが51以上100以下ならリスク値2
・HPが101以上150以下ならリスク値1
・HPがそれ以外ならリスク値0
・状態コードの値をリスク値に加算
リスクの高い順かつHPの低い順にキャラクターを表示する。
[Tips]
型変換をする際は以下の関数を用いる

1
CAST(expr AS type)
[例]

1
CAST(状態コード AS SIGNED) -->正の整数にキャスト
44.イベントテーブルより、イベントの一覧をイベント番号順に次の形式で取得する。
・前提イベント番号 ・イベント番号 ・後続イベント番号
前提または後続イベントがない場合は、それぞれ「前提なし」「後続なし」と表示すること

LEVEL5
45. 現在、主人公のパーティーにいるキャラクターのHPとMPについて、最大値、最小値、平均値をそれぞれ求める。
46. イベントテーブルから、タイプ別にイベントの数を取得する。ただし、タイプは日本語での表記とする。

47. 経験イベントテーブルから、クリアの結果別にクリアしたイベントの数を取得する。クリアの結果順に表示すること

[Tips]
良問。ここらへんをスムーズに解きたい

48. 攻撃魔法「小さな奇跡」は、パーティー全員のMPによって行動が異なる。次の条件に従って、現在のパーティーがこの魔法を使った時の敵の行動を表示する。
・パーティー全員のMPが500未満なら
「敵は見とれている!」
・パーティー全員のMPが500以上1000未満なら
「敵は呆然としている!」
・パーティー全員のMPが1000以上なら
「敵はひれ伏している!」
49.
経験イベントテーブルから、クリアしたイベント数と参加したもののまだクリアしていないイベントの数を次の形式で表示する。



50.
職業タイプごとのHPとMPの最大値、最小値、平均値を抽出する。ただし、職業タイプは職業コードの1文字目によって分類すること。

[Tips]
部分文字列を取得したい場合は以下の関数を用いる

1
SUBSTRING(文字列,開始位置(1から),抽出数)
[例]

1
SUBSTRING('Banana',1,2) -->Ba
2
SUBSTRING('Banana',3,4) -->nana
51.
IDの1文字目によってパーティを分類し、HPの平均値が100を超えているデータを抽出する。次の項目を抽出すること。
・IDによる分類 　・HPの平均 ・MPの平均

52．
ある洞窟に存在する「力の扉」は、キャラクターのHPによって開けることのできる扉の数が決まっている。次の条件によってその数が決まるとき、現在のパーティーで開けることのできる扉の数を求める。
・HPが100未満のキャラクター　1枚
・HPが100以上150未満のキャラクター　2枚
・HPが150以上200未満のキャラクター　3枚
・HPが200以上のキャラクター　5枚
[Tips]
SELECT SUM(
~ここにCASEを書く~
) AS 開けられる扉の数
FROM パーティー

LEVEL6
53. 勇者の現在のHPが、パーティー全員のHPの何%に当たるかを求めるため、適切な列を用いて次の別名で抽出する。ただし、割合は小数点第2位を四捨五入し、小数点第1位まで求めること。
・なまえ ・現在のHP ・パーティーでの割合
[Tips]
副問合せを用い、パーティー全体のHPの合計を求める

54.
魔法使いは回復魔法「みんなからのお裾分け」を使ってMPを回復したので、魔法使いのMPを更新する。この魔法はパーティー全員のMP合計値の10%をもらうことができる。端数は四捨五入すること。なお、魔法使い以外のMPは更新しなくてよい。
[Tips]
激ムズ
副問合せで合計MPを求めて、その値に０．１かけて魔法使いのmpを更新すればいい。。。
と思うが
「mySQLでは更新対象テーブルと同じテーブルを更新条件のサブクエリに使用することができない」
という謎の縛りがある。なのでSET内で使うパーティーテーブルには別名をつけなればならない。
以下は解答例

UPDATE パーティー
SET mp=mp+
ROUND(
(SELECT SUM(mp) FROM (SELECT * FROM パーティー) as t)
*0.1)
WHERE 職業コード=’20’

55.
経験イベントテーブルから、これまでにクリアしたイベントのうち、タイプが「強制」または「特殊」であるものについて、次の形式で抽出する。
・イベント番号 ・クリア結果
抽出には副問い合わせを用いること

56.
パーティーテーブルから、パーティー内で最も高いMPを持つキャラクター名とそのMPを抽出する。抽出には、副問い合わせを用いること。

57.
これまで着手していないイベントについて、イベント番号とその名称をイベント番号順に抽出する。抽出には副問い合わせを用いること。

58.
これまでに着手していないイベントの数を抽出する。抽出には、副問い合わせを用いること。

59.
5番目にクリアしたイベントのイベント番号よりも小さい番号を持つすべてのイベントについて、イベント番号とイベント名称を抽出する。

60.
これまでにパーティーがクリアしたイベントを前提としているイベントの一覧を次の形式で出力する。
・イベント番号 ・イベント名称 ・前提イベント番号


61.
パーティーは、イベント番号「９」のイベントを結果「B」でクリアし、その次に発生するイベントに参加した。これを経験イベントテーブルに記録する。なお、更新と追加の両方を２つのSQL文で記述すること。
[2つ目(更新)のSQL文実行後]


LEVEL7
62.
すでにクリアしたイベントについて、次の形式の一覧を抽出する。
・ルート番号 ・イベント番号 ・イベント名称 ・クリア結果


63.
イベントテーブルから、タイプ「強制」のイベントについて、イベント番号とイベント名称、パーティーのクリア区分を抽出する。ただし、これまでに未着手のイベントは考慮しなくてよい。

64
問題63では、着手していないイベントについては抽出されなかった、未着手のイベントについてももれなく抽出できるよう、SQL文を改善する。なお、クリアしていないイベントについては、クリア区分に「未クリア」と記載する。。

65.
次の表のようなコードテーブルを新しく作成、職業コードと状態コードを登録した。

<コードテーブル>・・・さまざまなコード値を管理するテーブル
列名、型、制約、備考
コード種別、INTEGER、PKEY、コード値を区別する(1:職業コード,
2:状態コード,3:イベントタイプ,4:クリア結果、・・・)
コード値、char(2)、PKEY、コード種別ごとのコード値
コード名称、varchar(100), ,コード値の日本語名称

このテーブルを使って、現在のパーティーに参加しているキャラクターの一覧を適切な列を用いて次の別名で、ID順に抽出する。
・ID ・なまえ ・職業 ・状態
職業と状態は日本語名称で表示すること。

66.
パーティーテーブルから、現在のパーティーに参加しているキャラクターの一覧を次のパーティーにいない職業についてもれなく一覧に記載し、名称の項目に「（仲間になっていない!)」と表示すること。
・ID ・なまえ ・職業

67．
経験イベントテーブルから、参加済みイベントのクリア結果一覧を次の形式で抽出する。クリア結果は「コード値：コード名称」のように表示し、クリア未済のイベントも記載されるよう考慮する。
・イベント番号 ・クリア区分 ・クリア結果

68.
イベントテーブルから、前提イベントまたは後続イベントが設定されているイベントについて、次の形式の一覧を抽出する。
・イベント番号 ・イベント名称 ・前提イベント番号 ・前提イベント名称 ・後続イベント番号 ・後続イベント名称

69.
イベントテーブルから、前提イベントまたは後続イベントが設定されているイベントについて、次の形式の一覧を抽出する。
・イベント番号　・イベント名称 ・前提イベント番号 ・前提イベント名称 ・後続イベント番号 ・後続イベント名称

70.
ほかのイベントの前提となっているイベントについて、次の形式の一覧を抽出する。一覧はイベント番号順とする。
・イベント番号 ・イベント名称 ・前提イベント数
なお、前提イベント数は、そのイベントを前提としているイベントの数を表す
